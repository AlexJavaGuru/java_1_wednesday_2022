Генерация следующего поколения в игре Conway's Game of Life
(https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life).

Правила игры мы запрограммировали.
Пора реализовать приложение полностью.
Перед написанием кода, разработайте дизайн решения для всей
программы в которой должна быть следующая функциональность:
- консольный UI (User Interface),
- генерация случайного начального состояния,
- правила игры (мы их уже реализовали).

В разработанный вами дизайн должно входить:
- название всех классов необходимых вам для решения поставленной задачи,
- описание словами в свободной форме для чего нужен каждый из классов,
  за что он будет отвечать, какие обязанности будут возложены на каждый из классов,
- примерные названия публичных методов каждого из классов.

Как придуманные классы будут взаимодействовать друг с другом?
Какой класс будет вызывать публичные методы другого класса и зачем?

Зачем всё это делать спросите вы, когда можно просто начать писать код и все?
Перед написанием кода в сложной системе обязательно нужна фаза дизайна будущего
решения. Фаза дизайна позволяет вам придумать, визуально представить, оценить
ваше решение задачи до написания самого кода. На фазе дизайна вы можете
разделить функциональность вашей системы на несколько классов, придумать
подходящие названия для этих классов и описать за что каждый из классов
будет отвечать. Если не тратить время на фазу дизайна, а сразу приступать
к написанию кода, то скорее всего вы поместите всю функциональность вашей
системы в один класс, задача будет конечно решена, но .... вы лишите себя
возможности использовать всю силу ООП, ваш класс скорее всего получится
очень большим, это и не удивительно, так как он берёт на себя все обязанности
в вашей системе. Скорее всего с таким классом и кодом в нём будет очень
тяжело работать в будущем.

Во избежании таких проблем, или хотя бы для их минимизации и нужна фаза дизайна.
Лучший способ - это взять чистый лист бумаги и на нём нарисовать кватратики
(это классы), дать им названия и прописать словами за что каждый из классов будет
отвечать, попробовать придумать как классы будут взаимодействовать друг
с другом (какой класс у какого будет вызывать методы), придумать какие
главные методы нужны в каждом из классов.

Чистый лист бумаги - это идеальный инструмент для проведения фазы дизайна.
Если вам не понравилось решение, которое вы придумали, вы просто берёте
новый чистый лист бумаги и придумываете новое решение! Это намного быстрее
и дешевле, чем реализовать это решение в коде, потратить на это много времени
и потом понять, что оно плохое и нужно было сделать все по другому.

Решение на листе бумаги можно накидать за 5 - 10 минут, потом проанализировать
его и если оно покажется вам плохим то вы потратили только 15 мин своего времени
на его создание, а не целый вечер в случае написания реального кода.

Только после того, как придуманное решение вам понравится вы можете приступать
к его реализации в виде кода.

Попробуйте разработать дизайн всей программы целиком!
Не волнуйтесь если у вас плохо это получится, в этом деле нужна практика!