Virtual disk design kata

--------------------------------------------------

Requirement 1
User can store files in this virtual disk.
We are not going to move/save any real file; just store file's name and size.
A starting class for this virtual disk could be:

class Storage {
   public Directory rootDirectory();
}

That is, the method rootDirectory() will return the base Directory (with name "/").

A Directory has a name and stores File(s).
It should allow to add and delete a file(s).
A File will be created with a name (a string) and a size (an int).

------------------------------------------------

Requirement 2
Directories can contain File(s) but also Directory(s). So generalize both as Resource(s).

--------------------------------------------------

Requirement 3
We need to know the total size our virtual storage is using.
So add the following method to Storage: int totalSize();

--------------------------------------------------

Requirement 4
As per business request, we need to know how many MP3 files are stored.
Implement in Storage int totalMP3()
Consider a file is an MP3 if it’s name finishes with “mp3”.

--------------------------------------------------