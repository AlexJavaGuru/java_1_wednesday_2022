Что вы будете делать дальше после того как внешний интерфейс системы уже определён?

Если вы сразу готовы взяться за написание кода то это не верное решение.

Перед написанием кода в обязательном порядке должна идти фаза дизайна
вашего решения. В этот момент вы придумываете как будет выглядеть решение
с высоты птичьего полёта, без чётких деталей. В этот момент нас интересует
архитектура нашего решения: какие классы нужно создать, как поделить
ответственность между ними (кто за что будет отвечать), как эти классы
будут взаимодействовать друг с другом, будет ли это решение легко поддерживать
и развивать в будущем.

Зачем всё это нужно спросите вы? Я же могу взять и просто запрограммировать
всё решение в одном классе! Конечно можете. Если вы так действительно думаете,
то попробуйте так и сделать - запрограммируйте ваше решение от начала и до конца
прямо сейчас.

Если брать и решать проблему в лоб, то решение будет очень часто очень плохое.
Да оно будет работать и решать поставленные на данный момент требования. Но скорее
всего такой ковбойский подход приведёт к тому, что у вас в коде будут большие
классы с перегруженной ответсвенностью (когда один класс отвечает за много
вещей сразу, выполняет много работы), будут отсутствовать автоматические тесты,
читать и понимать ваш код будет не просто, а расширять его функциональность
очень трудно. К сожалению - это реальность очень многих ИТ проектов. Функциональность
настоящих проектов намного сложнее чем решаемые нами тестовые задания и если
вы сейчас не научитесь обращать внимание на дизайн, чистый код, архитектуру,
автоматические тесты, читаемость кода, возможности расширения кода и так далее
то в будущем и подавно делать это не будете. В рещультате вы будете писать
очень плохой код и очень сложные решения с которыми будет сложно работать.

В действительности фаза дизайна помогает не только упростить решение задачи,
сделать его более надёжным и расширяемым в будущем, но и позволит ускорить
разработку самого решения.

Попробуйте придумать как может выглядеть решение этой задачи.
Возьмите чистый лист бумаги и нарисуйте возможные компоненты (классы)
вашего решения и стрелками покажите как эти классы будут взаимодействовать
между собой. Напишите словами напротив каждого класса за что он будет отвечать,
какую функциональность будет реализовывать.