Анонимные классы похожи на нормальные классы, о которых вы уже знаете в Java.
Но у анонимных классов нет имени. Они позволяют вам объявить и
создать экземпляр класса в одно и то же время. Другими словами,
они позволяют вам создавать специальные реализации.

List<Apple> redApples = filterApples(..., new ApplePredicate() {
    public boolean test(Apple apple) {
        return "red".equals(apple.getColor());
    }
});

При создании анонимного класса вы создаёте новый объект
(new ApplePredicate()) и объявляете его реализацию

{
    public boolean test(Apple apple) {
        return "red".equals(apple.getColor());
    }
}

в одно и то же время. Так как вы предоставили полную реализацию
(реализацию всех методов объявленных в этом интерфейсе, в нашем
случае это один метод test())
интерфейса ApplePredicate, то Java позволяет вам создать
экземпляр реального класса, который реализует иетерфейс ApplePredicate.
Этот класс будет анонимным (Java сама даст ему название) так как
вы сами этого не сделали (но это и не было нужно в вашем случае).


//TODO: Check if this necessary
В юнит тестах попробуйте написать тесты в которых вы создадите
анонимные классы для поиска:
- зелёных яблок,
- красных яблок,
- тяжелых яблок ( > 150 г.),
- лёгких яблок ( < 150 г.).